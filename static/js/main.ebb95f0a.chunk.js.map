{"version":3,"sources":["components/Item/Item.component.jsx","components/ItemList/ItemList.component.jsx","components/Navigation/Navigation.component.jsx","components/ScreenshotForm/ScreenshotForm.component.jsx","services/register.service.js","components/Register/Register.component.jsx","services/signin.service.js","services/googleSignin.service.js","components/SignIn/SignIn.component.jsx","services/saveScreenshot.service.js","services/deleteScreenshot.service.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Item","item","onDeleteButtonClick","className","alt","url","src","screenshot","width","height","href","target","rel","type","onClick","id","ItemList","items","map","Navigation","onRouteChange","isUserSignedIn","ScreenshotForm","onInputWebsiteChange","onSaveButtonClick","isDisabled","buttonText","placeholder","name","onChange","disabled","registerService","email","password","a","fetch","method","headers","body","JSON","stringify","response","json","register","Register","onEmailChange","event","setState","value","onNameChange","onPasswordChange","onRegisterSumbit","state","user","props","loadUser","loadScreenshots","htmlFor","required","this","React","Component","signinService","signin","googleSigninService","googleSignin","SignIn","onSignInSumbit","screenshots","onGoogleSignInSubmit","profileObj","loadGoogleUser","onGoogleFailure","console","log","clientId","cookiePolicy","theme","onSuccess","onFailure","saveScreenshotService","saveScreenshot","deleteScreenshotService","deleteScreenshot","App","route","inputWebsite","screenshotId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebb95f0a.chunk.js","sourcesContent":["import React from 'react';\nimport './Item.style.css';\n\nconst Item = ({ item, onDeleteButtonClick }) => {\n  return (\n    <article className='item'>\n      <img alt={item.url} src={item.screenshot} width='300px' height='225px' />\n      <p className='top'>Web address:</p>\n      <a href={item.url} target='_blank' rel='noopener noreferrer'>\n        <p>{item.url}</p>\n      </a>\n      <button type='submit' onClick={() => onDeleteButtonClick(item.id)}>\n        Delete\n      </button>\n    </article>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from '../Item/Item.component';\nimport './ItemList.style.css';\n\nconst ItemList = ({ items, onDeleteButtonClick }) => {\n  return (\n    <div className='itemlist'>\n      {items.map((item) => (\n        <Item\n          key={item.id}\n          item={item}\n          onDeleteButtonClick={onDeleteButtonClick}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React from 'react';\nimport './Navigation.style.css';\n\nconst Navigation = ({ onRouteChange, isUserSignedIn }) => {\n  if (isUserSignedIn) {\n    return (\n      <nav className='navigation'>\n        <p className='navigation-logo'>Screenshot Gallery</p>\n        <ul className='navigation-links'>\n          <li onClick={() => onRouteChange('signin')}>Sign Out</li>\n        </ul>\n      </nav>\n    );\n  } else {\n    return (\n      <nav className='navigation'>\n        <p className='navigation-logo'>Screenshot Gallery</p>\n        <ul className='navigation-links'>\n          <li onClick={() => onRouteChange('signin')}>Sign In</li>\n          <li onClick={() => onRouteChange('register')}>Register</li>\n        </ul>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","import React from 'react';\nimport './ScreenshotForm.style.css';\n\nconst ScreenshotForm = ({\n  onInputWebsiteChange,\n  onSaveButtonClick,\n  isDisabled,\n  buttonText,\n}) => {\n  return (\n    <section>\n      <div className='screenshotform flex'>\n        <input\n          type='text'\n          placeholder='Please enter a website'\n          name='inputWebsite'\n          id='inputWebsite'\n          onChange={onInputWebsiteChange}\n        />\n        <button disabled={isDisabled} onClick={onSaveButtonClick}>\n          {buttonText}\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default ScreenshotForm;\n","export async function registerService(email, name, password) {\n  const response = await fetch(\n    'https://screenshot-gallery-api.herokuapp.com/register',\n    {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: email,\n        name: name,\n        password: password,\n      }),\n    }\n  );\n  const register = await response.json();\n\n  return register;\n}\n","import React from 'react';\nimport { registerService } from '../../services/register.service';\nimport './Register.style.css';\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      password: '',\n    };\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onNameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onRegisterSumbit = async () => {\n    const register = await registerService(\n      this.state.email,\n      this.state.name,\n      this.state.password\n    );\n    if (register.user) {\n      this.props.loadUser(register.user);\n      this.props.loadScreenshots([]);\n      this.props.onRouteChange('home');\n    }\n  };\n\n  render() {\n    return (\n      <section className='register flex'>\n        <div>\n          <h3>Register</h3>\n\n          <label htmlFor='email'>Email</label>\n          <input\n            type='text'\n            placeholder='Please enter email'\n            name='email'\n            id='email'\n            required\n            onChange={this.onEmailChange}\n          />\n\n          <label htmlFor='name'>Name</label>\n          <input\n            type='text'\n            placeholder='Please enter name'\n            name='name'\n            id='name'\n            required\n            onChange={this.onNameChange}\n          />\n\n          <label htmlFor='psw'>Password</label>\n          <input\n            type='password'\n            placeholder='Please enter password'\n            name='psw'\n            id='psw'\n            required\n            onChange={this.onPasswordChange}\n          />\n\n          <button type='submit' onClick={this.onRegisterSumbit}>\n            Register\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Register;\n","export async function signinService(email, password) {\n  const response = await fetch(\n    'https://screenshot-gallery-api.herokuapp.com/signin',\n    {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    }\n  );\n  const signin = await response.json();\n\n  return signin;\n}\n","export async function googleSigninService(email) {\n  const response = await fetch(\n    'https://screenshot-gallery-api.herokuapp.com/googlesignin',\n    {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: email,\n      }),\n    }\n  );\n  const googleSignin = await response.json();\n\n  return googleSignin;\n}\n","import React from 'react';\nimport { signinService } from '../../services/signin.service';\nimport { googleSigninService } from '../../services/googleSignin.service';\nimport GoogleLogin from 'react-google-login';\n\nimport './SignIn.style.css';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  onEmailChange = (event) => {\n    this.setState({ email: event.target.value });\n  };\n\n  onPasswordChange = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onSignInSumbit = async () => {\n    const signin = await signinService(this.state.email, this.state.password);\n    if (signin.user) {\n      this.props.loadUser(signin.user);\n      this.props.loadScreenshots(signin.screenshots);\n      this.props.onRouteChange('home');\n    }\n  };\n\n  onGoogleSignInSubmit = async (response) => {\n    const email = response.profileObj.email;\n    if (email) {\n      const googleSignin = await googleSigninService(email);\n      this.props.loadGoogleUser(email);\n      this.props.loadScreenshots(googleSignin.screenshots);\n      this.props.onRouteChange('home');\n    }\n  };\n\n  onGoogleFailure = async (response) => {\n    console.log(response);\n  };\n\n  render() {\n    return (\n      <section className='signin flex'>\n        <div>\n          <h3>Sign In</h3>\n          <GoogleLogin\n            clientId='116269793133-7ih340bt80irmt46dhkpg2h5r8ntsg8f.apps.googleusercontent.com'\n            buttonText='Sign in with Google'\n            cookiePolicy={'single_host_origin'}\n            theme='dark'\n            onSuccess={this.onGoogleSignInSubmit}\n            onFailure={this.onGoogleFailure}\n          />\n          <hr />\n          <label htmlFor='email'>Email</label>\n          <input\n            type='text'\n            placeholder='Please enter email'\n            name='email'\n            id='email'\n            required\n            onChange={this.onEmailChange}\n          />\n\n          <label htmlFor='psw'>Password</label>\n          <input\n            type='password'\n            placeholder='Please enter password'\n            name='psw'\n            id='psw'\n            required\n            onChange={this.onPasswordChange}\n          />\n\n          <button type='submit' onClick={this.onSignInSumbit}>\n            Sign In\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default SignIn;\n","export async function saveScreenshotService(email, url) {\n  const response = await fetch(\n    'https://screenshot-gallery-api.herokuapp.com/screenshot',\n    {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: email,\n        url: url,\n      }),\n    }\n  );\n  const saveScreenshot = await response.json();\n\n  return saveScreenshot;\n}\n","export async function deleteScreenshotService(email, id) {\n  const response = await fetch(\n    'https://screenshot-gallery-api.herokuapp.com/screenshot',\n    {\n      method: 'delete',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: email,\n        id: id,\n      }),\n    }\n  );\n  const deleteScreenshot = await response.json();\n\n  return deleteScreenshot;\n}\n","import React from 'react';\nimport ItemList from '../components/ItemList/ItemList.component';\nimport Navigation from '../components/Navigation/Navigation.component';\nimport ScreenshotForm from '../components/ScreenshotForm/ScreenshotForm.component';\nimport Register from '../components/Register/Register.component';\nimport SignIn from '../components/SignIn/SignIn.component';\nimport { saveScreenshotService } from '../services/saveScreenshot.service';\nimport { deleteScreenshotService } from '../services/deleteScreenshot.service';\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      inputWebsite: '',\n      screenshots: [],\n      route: 'signin',\n      isUserSignedIn: false,\n      user: {\n        id: '',\n        email: '',\n        name: '',\n      },\n      isDisabled: true,\n      buttonText: 'Save',\n    };\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n\n    if (route === 'home') {\n      this.setState({ isUserSignedIn: true });\n    } else {\n      this.setState({ isUserSignedIn: false });\n    }\n  };\n\n  loadUser = (user) => {\n    this.setState({\n      user: {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n      },\n    });\n  };\n\n  loadGoogleUser = (email) => {\n    this.setState({\n      user: {\n        id: 0,\n        email: email,\n        name: '',\n      },\n    });\n  };\n\n  loadScreenshots = (screenshots) => {\n    this.setState({ screenshots: screenshots });\n  };\n\n  onInputWebsiteChange = (event) => {\n    this.setState({ inputWebsite: event.target.value });\n    this.setState({ buttonText: 'Save' });\n    if (event.target.value === '') {\n      this.setState({ isDisabled: true });\n    } else {\n      this.setState({ isDisabled: false });\n    }\n  };\n\n  onSaveButtonClick = async () => {\n    this.setState({ isDisabled: true });\n    this.setState({ buttonText: 'Fetching...' });\n\n    const saveScreenshot = await saveScreenshotService(\n      this.state.user.email,\n      this.state.inputWebsite\n    );\n    this.loadScreenshots(saveScreenshot.screenshots);\n    this.setState({ isDisabled: false });\n    this.setState({ buttonText: 'Save' });\n  };\n\n  onDeleteButtonClick = async (screenshotId) => {\n    const deleteScreenshot = await deleteScreenshotService(\n      this.state.user.email,\n      screenshotId\n    );\n    this.loadScreenshots(deleteScreenshot.screenshots);\n  };\n\n  render() {\n    return (\n      <div>\n        <Navigation\n          onRouteChange={this.onRouteChange}\n          isUserSignedIn={this.state.isUserSignedIn}\n        />\n        {(() => {\n          switch (this.state.route) {\n            case 'register':\n              return (\n                <Register\n                  onRouteChange={this.onRouteChange}\n                  loadUser={this.loadUser}\n                  loadScreenshots={this.loadScreenshots}\n                />\n              );\n            case 'signin':\n              return (\n                <SignIn\n                  onRouteChange={this.onRouteChange}\n                  loadUser={this.loadUser}\n                  loadGoogleUser={this.loadGoogleUser}\n                  loadScreenshots={this.loadScreenshots}\n                />\n              );\n            case 'home':\n              return (\n                <div>\n                  <ScreenshotForm\n                    onInputWebsiteChange={this.onInputWebsiteChange}\n                    onSaveButtonClick={this.onSaveButtonClick}\n                    isDisabled={this.state.isDisabled}\n                    buttonText={this.state.buttonText}\n                  />\n                  <ItemList\n                    items={this.state.screenshots}\n                    onDeleteButtonClick={this.onDeleteButtonClick}\n                  />\n                </div>\n              );\n            default:\n              break;\n          }\n        })()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}